///////////////////////////////////////////////////////   NON WF   ////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////// Multiple children per mating, monogamy ///////


initialize() {
	
	
initializeSLiMModelType("nonWF");
defineConstant("K", 500);
initializeMutationType("m1", 0.5, "f", 0.0);
m1.convertToSubstitution = T;
initializeGenomicElementType("g1", m1, 1.0);
initializeGenomicElement(g1, 0, 99999);
initializeMutationRate(1e-7);
initializeRecombinationRate(1e-8);


}


reproduction() {
	
	

parents = sample(p1.individuals, p1.individualCount);  // randomize the order of p1.individuals, useful for cycling 

for (i in seq(0, p1.individualCount - 2, by=2))  // draw monogamous pairs and generate litters
	
	{
	parent1 = parents[i];
	parent2 = parents[i + 1];
	litterSize = rpois(1, 2.0);
	// print(litterSize); ////number of children
	for (j in seqLen(litterSize))
		p1.addCrossed(parent1, parent2);

	}

self.active = 0; // disable this callback for this generation //// SUPER important, reproduction is not called again in this gen

}


1 early() {
	
sim.addSubpop("p1", 10);

}



early() {
	
p1.fitnessScaling = K / p1.individualCount;

}


late() {
	
inds = p1.individuals;
catn(sim.generation + ": " + size(inds) + " (" + max(inds.age) + ")");

}



2000 late() {
	
sim.outputFull(ages=T);

}


